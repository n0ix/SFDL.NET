<Controls:MetroWindow
    x:Class="MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:dng="clr-namespace:SFDL.DragnDrop;assembly=SFDL.DragnDrop"
    xmlns:local="clr-namespace:SFDL.NET3"
    xmlns:p="clr-namespace:SFDL.NET3.My.Resources"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:Flags="clr-namespace:FamFamFam.Flags.Wpf;assembly=FamFamFam.Flags.Wpf"
    x:Name="SFDL_MainWindow"
    Title="SFDL.NET 3"
    WindowTitleBrush="{DynamicResource WhiteColorBrush}"
    MinWidth="820"
    MinHeight="550"    
    Dialog:DialogParticipation.Register="{Binding}"
    dng:DropBehavior.PreviewDropCommand="{Binding PreviewDropCommand}"
    AllowDrop="True"
    BorderThickness="2"
    NonActiveBorderBrush="{DynamicResource AccentColorBrush2}"
    GlowBrush="{DynamicResource AccentColorBrush2}"
    Icon="Resources/Icons/Icon.ico"
    SaveWindowPosition="True"
    ShowIconOnTitleBar="True"
    ShowTitleBar="True"
    WindowStartupLocation="CenterScreen"
    WindowState="{Binding WindowState,Mode=TwoWay}"
    Visibility="{Binding WindowVisibility,Mode=TwoWay}"
    TextOptions.TextFormattingMode="Display"
    TextOptions.TextRenderingMode="ClearType">


    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>

    <Window.Resources>
        <ResourceDictionary>
            <local:InvertBooleanConverter x:Key="boolConvert" />
            <local:CollectionViewNameConverter x:Key="CollectionViewNameConv" />
            <local:FileSizeConverter x:Key="FileSizeConv" />
            <local:CollectionViewNameSecureIndicatorConverter x:Key="CollectionViewName2SecureIndicator"/>
            <Flags:CountryIdToFlagImageSourceConverter x:Key="CountryIdToFlagImageSourceConverter" />

            <Style x:Key="MyCustomListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource VirtualisedMetroListView}">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CustomLightMetroWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DarkMetroWindowButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </Style>

            <Style x:Key="CustomDarkMetroWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DarkMetroWindowButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </Style>

            <Style TargetType="{x:Type Controls:WindowButtonCommands}" BasedOn="{StaticResource {x:Type Controls:WindowButtonCommands}}">
                <Setter Property="LightMinButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
                <Setter Property="LightMaxButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
                <Setter Property="LightCloseButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
                <Setter Property="DarkMinButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
                <Setter Property="DarkMaxButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
                <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            </Style>

            <VisualBrush
                x:Key="DownloadStatusNone"
                Stretch="Uniform"
                Visual="{StaticResource appbar_sleep}" />
            <VisualBrush
                x:Key="DownloadStatusQueued"
                Stretch="Uniform"
                Visual="{StaticResource appbar_cabinet_files}" />
            <VisualBrush
                x:Key="DownloadStatusCompleted"
                Stretch="Uniform"
                Visual="{StaticResource appbar_check}" />
            <VisualBrush
                x:Key="DownloadStatusCompleted_HashValid"
                Stretch="Uniform"
                Visual="{StaticResource appbar_check}" />
            <VisualBrush
                x:Key="DownloadStatusCompleted_HashInvalid"
                Stretch="Uniform"
                Visual="{StaticResource appbar_warning}" />
            <VisualBrush
                x:Key="DownloadStatusRunning"
                Stretch="Uniform"
                Visual="{StaticResource appbar_cabinet_in}" />
            <VisualBrush
                x:Key="DownloadStatusStopped"
                Stretch="Uniform"
                Visual="{StaticResource appbar_control_stop}" />
            <VisualBrush
                x:Key="DownloadStatusFailed"
                Stretch="Uniform"
                Visual="{StaticResource appbar_stop}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_FileNameTooLong"
                Stretch="Uniform"
                Visual="{StaticResource appbar_interface_textbox}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_NotEnoughDiskSpace"
                Stretch="Uniform"
                Visual="{StaticResource appbar_transit_hazard}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_ServerFull"
                Stretch="Uniform"
                Visual="{StaticResource appbar_cup_full}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_ServerDown"
                Stretch="Uniform"
                Visual="{StaticResource appbar_network_server_disconnect}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_ConnectionError"
                Stretch="Uniform"
                Visual="{StaticResource appbar_network_server_disconnect}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_AuthError"
                Stretch="Uniform"
                Visual="{StaticResource appbar_user_delete}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_FileNotFound"
                Stretch="Uniform"
                Visual="{StaticResource appbar_page_delete}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_DirectoryNotFound"
                Stretch="Uniform"
                Visual="{StaticResource appbar_page_delete}" />
            <VisualBrush
                x:Key="DownloadStatusFailed_InternalServerError"
                Stretch="Uniform"
                Visual="{StaticResource appbar_monitor_delete}" />
            <VisualBrush
                x:Key="DownloadStatusRetry"
                Stretch="Uniform"
                Visual="{StaticResource appbar_reset}" />
            <VisualBrush
                x:Key="DownloadStatusRetryWait"
                Stretch="Uniform"
                Visual="{StaticResource appbar_reset}" />
            <VisualBrush
                x:Key="DownloadStatusAlreadyDownloaded"
                Stretch="Uniform"
                Visual="{StaticResource appbar_check}" />
            <VisualBrush
                x:Key="DownloadStatusIOError"
                Stretch="Uniform"
                Visual="{StaticResource appbar_type_bit}" />

            <VisualBrush
                x:Key="DownloadStatusHashCheck"
                Stretch="Uniform"
                Visual="{StaticResource appbar_radar_screen}" />


            <VisualBrush
                x:Key="TaskStatusFailed"
                Stretch="Uniform"
                Visual="{StaticResource appbar_stop}" />
            <VisualBrush
                x:Key="TaskStatusCanceled"
                Stretch="Uniform"
                Visual="{StaticResource appbar_cancel}" />
            <VisualBrush
                x:Key="TaskStatusRunning"
                Stretch="Uniform"
                Visual="{StaticResource appbar_progress}" />
            <VisualBrush
                x:Key="TaskStatusRanToCompletion"
                Stretch="Uniform"
                Visual="{StaticResource appbar_check}" />
            <VisualBrush
                x:Key="FTPConnectionUnSecure"
                Stretch="Uniform"
                Visual="{StaticResource appbar_unlock_keyhole}" />
            <VisualBrush
                x:Key="FTPConnectionSecure"
                Stretch="Uniform"
                Visual="{StaticResource appbar_lock}" />
            <VisualBrush
                x:Key="FileMalicious"
                Stretch="Uniform"
                Visual="{StaticResource appbar_shield_alert}" />
            <VisualBrush
                x:Key="FileIgnored"
                Stretch="Uniform"
                Visual="{StaticResource appbar_page_hidden}" />

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding OpenNewUpdateWebsiteCommand}" Visibility="{Binding NewUpdateAvailableVisibility.Result}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle
                        Width="16"
                        Height="16"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_shield_alert}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Strings.VariousStrings_NewUpdateAvailable}" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl x:Name="ContainerInfoFlyout">
            <Controls:Flyout
                Width="550"
                Header="Container Infos"
                IsOpen="{Binding ContainerInfoOpen}"
                Position="Right"
                Theme="Adapt">

                <Grid>
                    <StackPanel Margin="0,10,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Label
                                Margin="0,0,5,0"
                                Content="{x:Static p:Strings.ContainerInfo_ChooseSFDL}"
                                FontWeight="Bold" />
                            <ComboBox
                                x:Name="ComB_Container_Info"
                                DisplayMemberPath="DisplayName"
                                ItemsSource="{Binding ContainerSessions}"
                                SelectedItem="{Binding ContainerInfoSelectedItem}" />
                        </StackPanel>

                        <GroupBox Header="{x:Static p:Strings.ContainerInfo_GroupBoxHeader}">

                            <StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_Uploader}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Label
                                        x:Name="txt_containerinfo_upper"
                                        Content="{Binding ContainerInfoSelectedItem.ContainerFile.Uploader}"
                                        FontSize="14" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_ServerLocation}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Image
                                        x:Name="img_containerinfo_serverlocation"
                                        Width="24"
                                        Height="24"
                                        Margin="0,0,2,0"
                                        Source="{Binding ContainerInfoServerWhois.Result.CountryCode, Converter={StaticResource CountryIdToFlagImageSourceConverter}}" RenderOptions.BitmapScalingMode="HighQuality" />
                                    <Label
                                        x:Name="txt_containerinfo_serverlocation"
                                        Content="{Binding ContainerInfoServerWhois.Result.CountryCode}"
                                        FontSize="14" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_MaxThreads}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Label
                                        x:Name="txt_containerinfo_maxthreads"
                                        Content="{Binding ContainerInfoSelectedItem.ContainerFile.MaxDownloadThreads}"
                                        FontSize="14" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_Encrypted}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Label
                                        x:Name="txt_containerinfo_encrypted"
                                        Content="{Binding ContainerInfoSelectedItem.ContainerFile.Encrypted}"
                                        FontSize="14" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_PackagesCount}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Label Content="{Binding ContainerInfoSelectedItem.ContainerFile.Packages.Count}" FontSize="14" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label
                                        Content="{x:Static p:Strings.ContainerInfo_TotalSize}"
                                        FontSize="14"
                                        FontWeight="Bold" />
                                    <Label Content="{Binding ContainerInfoTotalSize.Result, Converter={StaticResource FileSizeConv}}" FontSize="14" />
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </Controls:Flyout>

            <Controls:Flyout
                x:Name="InstantVideoFlyout"
                Width="500"
                Header="Instant Video"
                IsOpen="{Binding InstantVideoOpen}"
                Position="Right"
                Theme="Adapt">

                <Grid>
                    <StackPanel>
                        <Label Margin="0,0,0,3" Content="{x:Static p:Strings.InstantVideo_AvailableStreams}" />
                        <TreeView Name="InstantVideoStreamList" ItemsSource="{Binding ContainerSessions}">

                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </TreeView.ItemContainerStyle>

                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:ContainerSession}" ItemsSource="{Binding InstantVideoStreams}">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle
                                            Width="16"
                                            Height="16"
                                            Margin="0,0,5,0"
                                            Fill="{DynamicResource AccentColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_film_list}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>

                                        <TextBlock Text="{Binding DisplayName}" />
                                        <TextBlock Text=" [" />
                                        <TextBlock Text="{Binding InstantVideoStreams.Count}" />
                                        <TextBlock Text="]" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <DataTemplate DataType="{x:Type local:InstantVideoStream}">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle
                                            Width="16"
                                            Height="16"
                                            Margin="0,0,5,0"
                                            Fill="{DynamicResource AccentColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_film_live}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </StackPanel>
                                </DataTemplate>
                            </TreeView.Resources>
                        </TreeView>

                        <Button
                            x:Name="cmd_play_instant_video"
                            MinWidth="400"
                            Margin="0,5,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"                            
                            BorderBrush="{DynamicResource AccentColorBrush2}"
                            BorderThickness="1"
                            Command="{Binding InstantVideoCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Margin="5,0"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_monitor_film}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Text="{x:Static p:Strings.VariousStrings_Play}" />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>



    <Grid x:Name="RootGrid">

        <tb:TaskbarIcon 
                    x:Name="NotifyIcon"
                    Visibility="{Binding TrayIconVisibility}"
                    ToolTipText="SFDL.NET 3"
                    IconSource="/Resources/Icons/Icon.ico"
                    MenuActivation="LeftOrRightClick"
                    PopupActivation="DoubleClick">

            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{x:Static p:Strings.TrayIcon_RestoreWindow}" Command="{Binding ShowMainWindowCommand}">
                        <MenuItem.Icon>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_window_maximize}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>

                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>


        </tb:TaskbarIcon>

        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>

                <Menu x:Name="MainMenu" Grid.Row="0" Margin="5,1,5,0">
                    <MenuItem Header="{x:Static p:Strings.MainMenu_File}">
                        <MenuItem.Icon>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_tiles_four}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                        <MenuItem
                            x:Name="cmd_open_file"
                            Command="{Binding OpenSFDLCommand}"
                            Header="{x:Static p:Strings.MainMenu_File_OpenFile}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_folder_open}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            x:Name="cmd_Settings"
                            Command="{Binding ShowSettingsDialogCommand}"
                            Header="{x:Static p:Strings.MainMenu_File_Settings}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_cog}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            x:Name="cmd_exit_app"
                            Command="{Binding ExitApplicationCommand}"
                            Header="{x:Static p:Strings.MainMenu_File_Exit}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_door_leave}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Strings.MainMenu_Modify}">
                        <MenuItem.Icon>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                        <MenuItem Command="{Binding RemoveAllCompletedDownloadsCommand}" Header="{x:Static p:Strings.MainMenu_Modify_RemoveAllCompletedDownloads}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_close}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RemoveAllDownloadsCommand}" Header="{x:Static p:Strings.MainMenu_Modify_CloseAlleDownloads}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_layer_delete}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding MarkAllItemsCommand}" Header="{x:Static p:Strings.MainMenu_Modifiy_MarkAllFiles}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding UnmarkAllItemsCommand}" Header="{x:Static p:Strings.MainMenu_Modifiy_UnmarkAllFiles}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark_uncrossed}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding CollapseAllPackagesCommand}" Header="{x:Static p:Strings.MainMenu_Modifiy_CollapeseAllPackages}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_section_collapse_all}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding ExpandAllPackagesCommand}" Header="{x:Static p:Strings.MainMenu_Modifiy_ExpandAllPackages}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_section_expand_all}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Strings.MainMenu_Extra}">
                        <MenuItem.Icon>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_star}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                        <MenuItem Header="{x:Static p:Strings.MainMenu_Extra_AfterDownload}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_calendar_future}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                            <MenuItem
                                Header="{x:Static p:Strings.MainMenu_Extra_AfterDownload_ExitLoader}"
                                IsCheckable="True"
                                IsChecked="{Binding CheckedPostDownloadExitApp}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_door_leave}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{x:Static p:Strings.MainMenu_Extra_AfterDownload_ShutdownComputer}"
                                IsCheckable="True"
                                IsChecked="{Binding CheckedPostDownloadShutdownComputer}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_power}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{x:Static p:Strings.MainMenu_Extra_AfterDownload_Standby}"
                                IsCheckable="True"
                                IsChecked="{Binding CheckedPostDownloadStandbyComputer}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_sleep}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Strings.MainMenu_Help}">
                        <MenuItem.Icon>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_question}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>

                        <MenuItem Command="{Binding ShowHelpCommand}" Header="{x:Static p:Strings.MainMenu_Help_About}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_home_people}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Command="{Binding ShowSFDLWikiCommand}" Header="{x:Static p:Strings.MainMenu_Help_Wiki}">
                            <MenuItem.Icon>
                                <Rectangle
                                    Width="16"
                                    Height="16"
                                    Fill="{DynamicResource AccentColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_book_open}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                </Menu>
                <ToolBar
                    x:Name="MainToolBar"
                    Grid.Row="1"
                    Height="Auto"
                    VerticalAlignment="Top"
                    ToolBarTray.IsLocked="True"
                    Margin="5,0,5,0">
                    <Rectangle
                        Width="16"
                        Height="16"
                        Margin="0"
                        Fill="{DynamicResource AccentColorBrush}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_play}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button
                        Command="{Binding StartDownloadCommand}"
                        Content="{x:Static p:Strings.MainToolBar_StartDownload}"
                        IsEnabled="{Binding ButtonDownloadStartStop}" />
                    <Rectangle
                        Width="16"
                        Height="16"
                        Margin="5,0"
                        Fill="{DynamicResource AccentColorBrush}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_stop}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button
                        Command="{Binding StopDownloadCommand}"
                        Content="{x:Static p:Strings.MainToolBar_StopDownload}"
                        IsEnabled="{Binding ButtonDownloadStartStop, Converter={StaticResource boolConvert}}" />
                    <Separator Margin="0" Background="{DynamicResource AccentColorBrush}" />
                    <Rectangle
                        Width="16"
                        Height="16"
                        Margin="5,0"
                        Fill="{DynamicResource AccentColorBrush}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_movie_clapper}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button
                        Command="{Binding InstantVideoCommand}"
                        Content="{x:Static p:Strings.MainToolbar_InstandVideo}"
                        IsEnabled="{Binding ButtonInstantVideoEnabled}" />
                    <Separator Margin="0" Background="{DynamicResource AccentColorBrush}" />
                    <Rectangle
                        Width="25"
                        Height="25"
                        Margin="5,0"
                        Fill="{DynamicResource AccentColorBrush}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_gauge_75}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBox
                        Width="120"
                        BorderBrush="{DynamicResource AccentColorBrush}"
                        Controls:TextBoxHelper.ClearTextButton="True"
                        Controls:TextBoxHelper.UseFloatingWatermark="True"
                        Controls:TextBoxHelper.Watermark="Max KB/s"
                        Text="{Binding MaxDownloadSpeed, UpdateSourceTrigger=PropertyChanged}" />
                </ToolBar>
                <Button
                    Grid.Row="1"
                    Width="40"
                    Height="40"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    Background="{DynamicResource WhiteColorBrush}"
                    BorderThickness="0"
                    Command="{Binding ShowContainerInfoCommand}">
                    <StackPanel>
                        <Rectangle
                            Width="16"
                            Height="16"
                            Margin="5,0"
                            Fill="{DynamicResource AccentColorBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_layer}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </StackPanel>
                </Button>
            </Grid>

            <Grid DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MinHeight="250" />
                    <RowDefinition Height="5" />
                    <RowDefinition
                        Height="Auto"
                        MinHeight="135"
                        MaxHeight="200" />
                </Grid.RowDefinitions>

                <ListView
                    x:Name="ListView_DownloadItems"
                    Style="{StaticResource MyCustomListView}"
                    VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                    MinHeight="250"
                    dng:DropBehavior.PreviewDropCommand="{Binding PreviewDropCommand}"
                    ItemsSource="{Binding DownloadItems}"
                    PreviewKeyUp="OnGridKeyUp"
                    SelectionMode="Extended"                   
                    BorderThickness="0,0,0,0"                    
                    Margin="6,0">

                    <ListView.View>
                        <GridView>
                            <local:FixedWidthColumn FixedWidth="37">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding isSelected}" Margin="-2,0,0,0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </local:FixedWidthColumn>
                            <GridViewColumn
                                Width="370"                                
                                Header="{x:Static p:Strings.ListView_DownloadItems_Header_Filename}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="-12,0,0,0">
                                            <Rectangle>
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="OpacityMask" Value="Transparent"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ExcludedType}" Value="Malicious">
                                                                <Setter Property="OpacityMask" Value="{StaticResource FileMalicious}" />
                                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                                <Setter Property="Width" Value="16"/>
                                                                <Setter Property="Height" Value="16"/>
                                                                <Setter Property="ToolTip" Value="{x:Static p:Strings.ListView_DownloadItems_PopUp_Blacklist}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                            
                                            <TextBlock Name="tb_FileName" Margin="6,0,6,0" Text="{Binding FileName}" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MetroTextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ExcludedType}" Value="User">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                                <Setter Property="ToolTip" Value="{x:Static p:Strings.ListView_DownloadItems_PopUp_UserIgnore}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExcludedType}" Value="Malicious">
                                                                <Setter Property="Foreground" Value="#E5CB0000" />
                                                                <Setter Property="ToolTip" Value="{x:Static p:Strings.ListView_DownloadItems_PopUp_Blacklist}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn
                                Width="Auto"
                                Header="{x:Static p:Strings.ListView_DownloadItems_Header_Filesize}" >
                                <GridViewColumn.CellTemplate >
                                    <DataTemplate >
                                        <TextBlock  Margin="-12,0,9,0" Text="{Binding FileSize, Converter={StaticResource FileSizeConv}}" HorizontalAlignment="Right"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="auto" Header="{x:Static p:Strings.ListView_DownloadItems_Header_Progress}">
                                <GridViewColumn.CellTemplate >
                                    <DataTemplate >
                                        <Controls:MetroProgressBar BorderThickness="0.75" BorderBrush="{DynamicResource AccentColorBrush}" Width="auto" Maximum="100" Value="{Binding DownloadProgress}" Margin="-12,0,8,0" Background="{DynamicResource WhiteBrush}" MinHeight="12" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="200" Header="{x:Static p:Strings.ListView_DownloadItems_Header_Status}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="False">
                                            <Rectangle
                                                Width="16"
                                                Height="16"
                                                Fill="{DynamicResource AccentColorBrush}" Margin="-8,0,8,0" DockPanel.Dock="Left">
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusNone}" />
                                                        <Style.Triggers>

                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Queued">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusQueued}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="None">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusNone}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Running">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusRunning}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Stopped">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusStopped}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Completed">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusCompleted}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Completed_HashValid">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusCompleted_HashValid}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Completed_HashInvalid">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusCompleted_HashInvalid}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_FileNameTooLong">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_FileNameTooLong}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_NotEnoughDiskSpace">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_NotEnoughDiskSpace}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_ServerFull">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_ServerFull}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_ServerDown">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_ServerDown}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_ConnectionError">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_ConnectionError}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_AuthError">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_AuthError}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_FileNotFound">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_FileNotFound}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_DirectoryNotFound">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_DirectoryNotFound}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Failed_InternalServerError">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusFailed_InternalServerError}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="Retry">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusRetry}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="RetryWait">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusRetryWait}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="AlreadyDownloaded">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusAlreadyDownloaded}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="IOError">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusIOError}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding DownloadStatusImage}" Value="HashCheck">
                                                                <Setter Property="OpacityMask" Value="{StaticResource DownloadStatusHashCheck}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExcludedType}" Value="Malicious">
                                                                <Setter Property="OpacityMask" Value="{StaticResource FileMalicious}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExcludedType}" Value="User">
                                                                <Setter Property="OpacityMask" Value="{StaticResource FileIgnored}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                            <TextBlock Margin="0,0,9,0" Text="{Binding DownloadStatusString}" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn
                                Width="Auto"                         
                                Header="{x:Static p:Strings.ListView_DownloadItems_Header_Speed}">
                                <GridViewColumn.CellTemplate >
                                    <DataTemplate >
                                        <TextBlock  Margin="0,0,13,0" Text="{Binding DownloadSpeed}" HorizontalAlignment="Right"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander Margin="0,3" IsExpanded="True" Controls:GroupBoxHelper.HeaderForeground="White">
                                                    <Expander.Header>
                                                        <DockPanel LastChildFill="False">
                                                            <StackPanel Orientation="Horizontal">
                                                                <Rectangle
                                                                    Width="16"
                                                                    Height="16"
                                                                    Margin="5,0"
                                                                    Fill="White">
                                                                    <Rectangle.Style>
                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource FTPConnectionUnSecure}" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Name, Converter={StaticResource CollectionViewName2SecureIndicator}}" Value="Secure">
                                                                                    <Setter Property="OpacityMask" Value="{StaticResource FTPConnectionSecure}" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Rectangle.Style>
                                                                </Rectangle>
                                                                <TextBlock                                                                    
                                                                    VerticalAlignment="Center"
                                                                    FontSize="12"
                                                                    FontWeight="Bold"
                                                                    Foreground="White"                                                                    
                                                                    Text="{Binding Name, Converter={StaticResource CollectionViewNameConv}}" HorizontalAlignment="Left" >
                                                                </TextBlock>
                                                            </StackPanel>

                                                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                                                <Button
                                                                    Width="25"
                                                                    Height="25"
                                                                    Margin="0,0,5,0"
                                                                    BorderThickness="0"
                                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SetSessionPriorityCommand}"
                                                                    CommandParameter="{Binding Name}">
                                                                    <StackPanel>
                                                                        <Rectangle
                                                                            Width="12"
                                                                            Height="12"
                                                                            Fill="{DynamicResource AccentColorBrush}">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_arrow_up}" />
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </StackPanel>
                                                                </Button>

                                                                <Button
                                                                    Width="25"
                                                                    Height="25"
                                                                    BorderThickness="0"
                                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CloseSFDLContainerCommand}"
                                                                    CommandParameter="{Binding Name}">
                                                                    <StackPanel>
                                                                        <Rectangle
                                                                            Width="12"
                                                                            Height="12"
                                                                            Fill="{DynamicResource AccentColorBrush}">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_close}" />
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </StackPanel>
                                                                </Button>
                                                            </StackPanel>
                                                        </DockPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>

                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Expander IsExpanded="{Binding Items[0].IsExpanded}" Controls:GroupBoxHelper.HeaderForeground="White">
                                                    <Expander.Header>
                                                        <DockPanel LastChildFill="False">
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock
                                                                    VerticalAlignment="Center"
                                                                    FontSize="11"
                                                                    FontWeight="Bold"                                                                    
                                                                    Foreground="White"
                                                                    Text="{Binding Name, StringFormat=Package: {0}}" HorizontalAlignment="Left">
                                                                </TextBlock>
                                                            </StackPanel>
                                                        </DockPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>

                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                x:Name="LV_DownloadItems_CM_OpenParentFolder"
                                Command="{Binding OpenParentFolderCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                Header="{x:Static p:Strings.DownloadItems_ContextMenu_OpenParentFolder}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_folder_open}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>

                            <MenuItem
                                x:Name="LV_DownloadItems_CM_CloseContainer"
                                Command="{Binding CloseSFDLContainerCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                Header="{x:Static p:Strings.DownloadItems_ContextMenu_CloseSFDLContainer}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_close}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>

                            <MenuItem
                                x:Name="LV_DownloadItems_CM_MarkAllItems"
                                Command="{Binding MarkAllItemsInPackageCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                Header="{x:Static p:Strings.DownloadItems_ContextMenu_MarkAllItemsInPackage}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>

                            <MenuItem
                                x:Name="LV_DownloadItems_CM_UnMarkAllItems"
                                Command="{Binding UnMarkAllItemsInPackageCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                Header="{x:Static p:Strings.DownloadItems_ContextMenu_UnMarkAllItemsInPackage}">
                                <MenuItem.Icon>
                                    <Rectangle
                                        Width="16"
                                        Height="16"
                                        Fill="{DynamicResource AccentColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_checkmark_uncrossed}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>

                <GridSplitter
                    DockPanel.Dock="Bottom"
                    Grid.Row="1"
                    Height="2"
                    HorizontalAlignment="Stretch"
                    ResizeDirection="Rows" 
                    Background="{DynamicResource AccentColorBrush}"
                    Margin="2,0,2,-2"
                    />

                <GroupBox
                    DockPanel.Dock="Bottom"
                    Grid.Row="2"
                    MinHeight="120"
                    Height="auto"
                    Header="{x:Static p:Strings.Expander_Header_Tasks}" Margin="6">
                    <TabControl Controls:TabControlHelper.IsUnderlined="True" TabStripPlacement="Top" Margin="0,0,0,0">
                        <TabItem Controls:ControlsHelper.HeaderFontSize="12" Header="{x:Static p:Strings.AppTasks_ListView_ActiveTasks_Header}">
                            <ListView
                                x:Name="ListViewActiveTasks"
                                ItemsSource="{Binding ActiveTasks}"                                
                                Style="{StaticResource MyCustomListView}"
                                BorderThickness="0,0,0,0" MinHeight="50">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn Width="900">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Rectangle>
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="OpacityMask" Value="Transparent"/>
                                                                    <Setter Property="Width" Value="0"/>
                                                                    <Setter Property="Height" Value="0"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Failed">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusFailed}" />
                                                                            <Setter Property="Width" Value="16"/>
                                                                            <Setter Property="Height" Value="16"/>
                                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Canceled">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusCanceled}" />
                                                                            <Setter Property="Width" Value="16"/>
                                                                            <Setter Property="Height" Value="16"/>
                                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="RanToCompletion">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusRanToCompletion}" />
                                                                            <Setter Property="Width" Value="16"/>
                                                                            <Setter Property="Height" Value="16"/>
                                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>

                                                        <Controls:ProgressRing>
                                                            <Controls:ProgressRing.Style>
                                                                <Style TargetType="{x:Type Controls:ProgressRing}">
                                                                    <Setter Property="Height" Value="0"/>
                                                                    <Setter Property="Width" Value="0"/>
                                                                    <Setter Property="MinHeight" Value="0"/>
                                                                    <Setter Property="MinWidth" Value="0"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Running">
                                                                            <Setter Property="Margin" Value="0,0,4,0"/>
                                                                            <Setter Property="Width" Value="14"/>
                                                                            <Setter Property="Height" Value="14"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Controls:ProgressRing.Style>
                                                        </Controls:ProgressRing>
                                                        <TextBlock Margin="5,0,0,0" Text="{Binding TaskDisplayText}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                        </TabItem>
                        <TabItem Controls:ControlsHelper.HeaderFontSize="12"  Header="{x:Static p:Strings.AppTasks_ListView_TaskHistory_Header}">
                            <ListView x:Name="ListViewDoneTasks" ItemsSource="{Binding DoneTasks}" Style="{StaticResource VirtualisedMetroListView}" BorderThickness="0,0,0,0">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn Width="800">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Rectangle
                                                            Width="16"
                                                            Height="16"
                                                            Fill="{DynamicResource AccentColorBrush}">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="OpacityMask" Value="{StaticResource TaskStatusRunning}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Failed">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusFailed}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Canceled">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusCanceled}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="Running">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusRunning}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding TaskStatusImage}" Value="RanToCompletion">
                                                                            <Setter Property="OpacityMask" Value="{StaticResource TaskStatusRanToCompletion}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                        <TextBlock Margin="5,0,0,0" Text="{Binding TaskDisplayText}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem
                                            Command="{Binding CopyDoneTaskTextCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                                            Header="{x:Static p:Strings.VariousStrings_Copy}">
                                            <MenuItem.Icon>
                                                <Rectangle
                                                    Width="16"
                                                    Height="16"
                                                    Fill="{DynamicResource AccentColorBrush}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_page_copy}" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </TabItem>
                    </TabControl>
                </GroupBox>
            </Grid>
        </DockPanel>
    </Grid>
</Controls:MetroWindow>
